// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_CONNECTION_URL_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_CONNECTION_URL_URL_NON_POOLING") // uses a direct connection
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  username         String            @unique
  password         String
  firstName        String
  lastName         String
  position         Position          @default(representative)
  manager          User?             @relation("Employees", fields: [managerId], references: [id])
  managerId        Int? // The ID of the manager (self-referential relationship)
  employees        User[]            @relation("Employees") // A manager can have many employees
  vacationBalance  Int               @default(21)
  VacationRequest  VacationRequest[]
  approvedRequests VacationRequest[] @relation("ApprovedByUser")
}

enum Position {
  representative
  teamLead
  supervisor
  qualityAnalyst
  trainer
  hr
  rtm
  it
}

model VacationRequest {
  id             Int                   @id @default(autoincrement())
  from           DateTime
  to             DateTime
  reason         VacationReason
  createdAt      DateTime              @default(now())
  approvalStatus VacationRequestStatus @default(pending)
  user           User                  @relation(fields: [userId], references: [id])
  userId         Int
  approvedBy     Int?
  approvedByUser User?                 @relation("ApprovedByUser", fields: [approvedBy], references: [id])
}

enum VacationRequestStatus {
  pending
  approved
  denied
}

enum VacationReason {
  business_trip
  annual
  casual
  sick
}
